<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">


	<!-- @Transactional 애노테이션을 사용하기 위해 다음의 설정을 추가한다. -->
	<tx:annotation-driven transaction-manager="transactionManager"/>	
			
	<context:component-scan base-package="net.cr.abrand">
		<context:exclude-filter type="regex" 
				expression="net.cr.abrand.controls.*"/>	
	</context:component-scan>

	
	
	
	
	<!-- JNDI 톰켓에 설정한 DBCP 정보를 가져와 dataSource로 사용 -->		
	<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/test" />

	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="net.cr.abrand.util.RefreshableSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="net.cr.abrand.vo" />		
		<property name="mapperLocations" value="classpath*:net/cr/abrand/dao/mysql/*Mapper.xml" />
		<property name="interval" value="10000" />			
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="net.cr.abrand.dao" />
	</bean>
	
</beans>









